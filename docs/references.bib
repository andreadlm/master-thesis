@inproceedings{MeyerRitchie:Loop,
  author = {Meyer, Albert R. and Ritchie, Dennis M.},
  title = {The complexity of loop programs},
  year = {1967},
  isbn = {9781450374941},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/800196.806014},
  doi = {10.1145/800196.806014},
  abstract = {Anyone familiar with the theory of computability will be aware that practical conclusions from the theory must be drawn with caution. If a problem can theoretically be solved by computation, this does not mean that it is practical to do so. Conversely, if a problem is formally undecidable, this does not mean that the subcases of primary interest are impervious to solution by algorithmic methods.In the next section we describe such a class of programs, called “Loop programs.” Each Loop program consists only of assignment statements and iteration (loop) statements, the latter resembling the DO statement of FORTRAN, and special cases of the FOR and THROUGH statements of ALGOL and MAD. The bound on the running time of a Loop program is determined essentially by the length of the program and the depth of nesting of its loops.},
  booktitle = {Proceedings of the 1967 22nd National Conference},
  pages = {465–469},
  numpages = {5},
  location = {Washington, D.C., USA},
  series = {ACM '67}
}