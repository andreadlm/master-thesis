@inproceedings{MeyerRitchie:Loop,
  author = {Meyer, Albert R. and Ritchie, Dennis M.},
  title = {The complexity of loop programs},
  year = {1967},
  isbn = {9781450374941},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/800196.806014},
  doi = {10.1145/800196.806014},
  abstract = {Anyone familiar with the theory of computability will be aware that practical conclusions from the theory must be drawn with caution. If a problem can theoretically be solved by computation, this does not mean that it is practical to do so. Conversely, if a problem is formally undecidable, this does not mean that the subcases of primary interest are impervious to solution by algorithmic methods.In the next section we describe such a class of programs, called “Loop programs.” Each Loop program consists only of assignment statements and iteration (loop) statements, the latter resembling the DO statement of FORTRAN, and special cases of the FOR and THROUGH statements of ALGOL and MAD. The bound on the running time of a Loop program is determined essentially by the length of the program and the depth of nesting of its loops.},
  booktitle = {Proceedings of the 1967 22nd National Conference},
  pages = {465–469},
  numpages = {5},
  location = {Washington, D.C., USA},
  series = {ACM '67}
}

@article{Matos:SRL,
  title = {Linear programs in a simple reversible language},
  journal = {Theoretical Computer Science},
  volume = {290},
  number = {3},
  pages = {2063-2074},
  year = {2003},
  issn = {0304-3975},
  doi = {https://doi.org/10.1016/S0304-3975(02)00486-3},
  url = {https://www.sciencedirect.com/science/article/pii/S0304397502004863},
  author = {Armando B. Matos},
  keywords = {Loop languages, Group of modular matrices, Reversibility},
  abstract = {Very simple reversible programming languages can be useful for the study of reversible transformations. For this purpose we define simple reversible language (SRL), a very simple reversible language, and analyse its properties. The language SRL is similar to the “loop” languages that have been used by several authors to characterise the set of primitive recursive functions. There are, however, important differences: SRL has domain Z instead of N and only reversible programs can be written in SRL. The reversibility of linear homogeneous SRL programs is related to the fact that the corresponding set of matrices has the algebraic structure of a group. We show that such programs implement exactly the linear transformations corresponding to the group of integer positive modular matrices, while in ESRL, an extended version of SRL, the set of transformations that can be implemented by linear homogeneous programs corresponds exactly to the group of integer modular matrices.}
}